pipeline {
    agent any

    environment {
        VENV = 'venv'
        REPORT_DIR = 'reports'
        REPO_URL = 'git@github.com:HarpLoid/alx-backend-python.git'
        APP_DIR = 'messaging-app'
        BRANCH_NAME = 'main'
    }

    stages{
        stage('Pulls code from GitHub'){
            steps{
                echo 'Sparse checkout for messaging app...'
                sshagent(credential: ['github-ssh']) {
                    git branch: "${BRANCH_NAME}", url: "${REPO_URL}"
                }
            }
        }

        stage('Set up Python environment') {
            steps {
                dir("${APP_DIR}"){
                    echo 'Setting up Virtual Environment'
                    sh '''
                       python3 -m venv $VENV
                        . $VENV/bin/activate
                        pip install --upgrade pip
                        pip install -r requirements.txt 
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir("${APP_DIR}") {
                    echo 'Running pytest...'
                    sh '''
                        . $VENV/bin/activate
                        mkdir -p $REPORT_DIR
                        pytest --junitxml=$REPORT_DIR/test-results.xml --maxfail=1 --disable-warnings -v
                    '''
                }
            }
        }

        stage('Publish Test Report') {
            steps {
                echo 'Publishing test report...'
                junit allowEmptyResults: true, testResults: "${APP_DIR}/${REPORT_DIR}/test-results.xml"
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh 'rm -rf ${APP_DIR}/${VENV} || true'
        }
        success {
            echo 'Messaging app pipeline completed successfully!'
        }
        failure {
            echo 'Messaging app pipeline failed. Check the test results.'
        }
    }
}
